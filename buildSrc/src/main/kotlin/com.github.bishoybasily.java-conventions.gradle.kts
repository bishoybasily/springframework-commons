/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor.get())
    }
}

dependencies {

    implementation("com.google.guava:guava:30.0-jre")

    compileOnly("org.projectlombok:lombok:1.18.18")
    annotationProcessor("org.projectlombok:lombok:1.18.18")

    implementation("io.projectreactor:reactor-core:3.3.4.RELEASE")
    testImplementation("io.projectreactor:reactor-test:3.3.4.RELEASE")

}

group = "com.github.bishoybasily"
version = "3.0.0-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        create<MavenPublication>("binary") {

            from(components["java"])

            pom {

                val projectGitUrl = "https://github.com/bishoybasily/springframework-commons"
                name.set(rootProject.name)
                description.set("Common logic for spring based projects")
                url.set(projectGitUrl)
                inceptionYear.set("2021")

                licenses {
                    license {
                        name.set("MIT")
                        url.set("https://opensource.org/licenses/MIT")
                    }
                }
                developers {
                    developer {
                        id.set("bishoybasily")
                        name.set("Bishoy Basily")
                        email.set("bishoybasily@gmail.com")
                        url.set("https://github.com/bishoybasily")
                    }
                }
                issueManagement {
                    system.set("GitHub")
                    url.set("$projectGitUrl/issues")
                }
                scm {
                    connection.set("scm:git:$projectGitUrl")
                    developerConnection.set("scm:git:$projectGitUrl")
                    url.set(projectGitUrl)
                }

            }

        }
    }
    repositories {
        mavenLocal()
        maven {
            url = uri("https://oss.sonatype.org/content/repositories/snapshots")
        }
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}